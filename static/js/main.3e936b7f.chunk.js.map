{"version":3,"sources":["components/transactionAlert.js","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["transactionAlert","incorrectValue","noMoney","success","Controls","_ref","hendleGetValue","hendleDeposits","hendleWithdrow","inputValue","react_default","a","createElement","className","styles","controls","input","type","name","onChange","e","placeholder","value","onClick","Balance","balance","summDeposits","summWithdrow","role","aria-label","TransactionHistory","transactions","history","map","el","key","id","date","stateSum","items","depositsSumm","filter","reduce","acc","withdrowSumm","deposits","withdrow","Dashboard","state","_this","setState","target","numberValue","Number","createObj","shortid","generate","Date","toLocaleString","concat","Object","toConsumableArray","resetInput","toast","error","_this$state","localStorage","getItem","this","JSON","parse","prevProps","prevState","setItem","stringify","_this$state2","components_Controls_Controls","components_Balance_Balance","components_TransactionHistory_TransactionHistory","react_toastify","closeButton","Component","App","Fragment","components_Dashboard_Dashboard","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3e936b7f.chunk.js","sourcesContent":["const transactionAlert = {\n  incorrectValue: 'Введите сумму для проведения операции!',\n  noMoney: 'На счету недостаточно средств для проведения операции!',\n  success: 'Операция произведена успешно!',\n};\n\nexport default transactionAlert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nconst Controls = ({\n  hendleGetValue,\n  hendleDeposits,\n  hendleWithdrow,\n  inputValue,\n}) => {\n  return (\n    <section className={styles.controls}>\n      <input\n        className={styles.input}\n        type=\"number\"\n        name=\"value\"\n        onChange={e => hendleGetValue(e)}\n        placeholder=\"0\"\n        value={inputValue}\n      />\n      <button type=\"button\" onClick={hendleDeposits}>\n        Deposit\n      </button>\n      <button type=\"button\" onClick={hendleWithdrow}>\n        Withdraw\n      </button>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  hendleGetValue: PropTypes.func.isRequired,\n  hendleDeposits: PropTypes.func.isRequired,\n  hendleWithdrow: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n};\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, summDeposits, summWithdrow }) => (\n  <section className={styles.balance}>\n    <span role=\"img\" aria-label=\"arrow-up\">\n      ⬆️ {summDeposits} $\n    </span>\n    <span role=\"img\" aria-label=\"arrow-down\">\n      ⬇️ {summWithdrow} $\n    </span>\n    <span> Balance: {balance} $</span>\n  </section>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  summDeposits: PropTypes.string.isRequired,\n  summWithdrow: PropTypes.string.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(el => (\n          <tr key={el.id}>\n            <td>{el.type}</td>\n            <td>{el.inputValue}$</td>\n            <td>{el.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      inputValue: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","/*eslint-disable*/\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport transactionAlert from '../transactionAlert';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TansactionHistory from '../TransactionHistory/TransactionHistory';\n\nconst stateSum = items => {\n  const depositsArr = items.filter(el => el.type === 'Deposits');\n  const depositsSumm = depositsArr.reduce(\n    (acc, el) => (acc += el.inputValue),\n    0,\n  );\n  const withdrowArr = items.filter(el => el.type === 'Withdrow');\n  const withdrowSumm = withdrowArr.reduce(\n    (acc, el) => (acc += el.inputValue),\n    0,\n  );\n  const newBalance = depositsSumm - withdrowSumm;\n\n  const stateObj = {\n    balance: newBalance,\n    deposits: depositsSumm,\n    withdrow: withdrowSumm,\n  };\n  return stateObj;\n};\n\nclass Dashboard extends Component {\n  state = {\n    inputValue: '',\n    transactions: [],\n    balance: 0,\n    deposits: 0,\n    withdrow: 0,\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem('transactions')) {\n      const transactions = localStorage.getItem('transactions');\n      this.setState({\n        transactions: JSON.parse(transactions),\n        balance: stateSum(JSON.parse(transactions)).balance,\n        deposits: stateSum(JSON.parse(transactions)).deposits,\n        withdrow: stateSum(JSON.parse(transactions)).withdrow,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions } = this.state;\n    if (prevState.transactions !== transactions) {\n      this.setState({\n        balance: stateSum(transactions).balance,\n        deposits: stateSum(transactions).deposits,\n        withdrow: stateSum(transactions).withdrow,\n      });\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n  }\n\n  hendleGetValue = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  hendleDeposits = () => {\n    const { inputValue } = this.state;\n    const numberValue = Number(inputValue);\n    if (numberValue > 0) {\n      const createObj = {\n        id: shortid.generate(),\n        date: new Date().toLocaleString(),\n        inputValue: numberValue,\n        type: 'Deposits',\n      };\n      this.setState(state => ({\n        transactions: [...state.transactions, createObj],\n      }));\n      this.resetInput();\n      toast.success(transactionAlert.success);\n    } else {\n      toast.error(transactionAlert.incorrectValue);\n    }\n  };\n\n  hendleWithdrow = () => {\n    const { inputValue, balance } = this.state;\n    const numberValue = Number(inputValue);\n    if (numberValue <= 0) {\n      toast.error(transactionAlert.incorrectValue);\n    } else if (balance >= numberValue) {\n      const createObj = {\n        id: shortid.generate(),\n        date: new Date().toLocaleString(),\n        inputValue: numberValue,\n        type: 'Withdrow',\n      };\n      this.setState(state => ({\n        transactions: [...state.transactions, createObj],\n      }));\n      this.resetInput();\n      toast.success(transactionAlert.success);\n    } else {\n      toast.error(transactionAlert.noMoney);\n    }\n  };\n\n  resetInput = () => {\n    this.setState({\n      inputValue: '',\n    });\n  };\n\n  render() {\n    const {\n      balance,\n      withdrow,\n      deposits,\n      transactions,\n      inputValue,\n    } = this.state;\n    return (\n      <div>\n        <Controls\n          inputValue={inputValue}\n          hendleGetValue={this.hendleGetValue}\n          hendleDeposits={this.hendleDeposits}\n          hendleWithdrow={this.hendleWithdrow}\n        />\n        <Balance\n          balance={balance}\n          summDeposits={deposits}\n          summWithdrow={withdrow}\n        />\n        <TansactionHistory transactions={transactions} />\n        <ToastContainer closeButton={false} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}